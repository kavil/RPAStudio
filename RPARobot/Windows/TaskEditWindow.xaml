<Window x:Class="RPARobot.Windows.TaskEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RPARobot.Windows"
        xmlns:vm="clr-namespace:RPARobot.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:system ="clr-namespace:System;assembly=mscorlib"
        xmlns:librarys="clr-namespace:RPARobot.Librarys"
        xmlns:usercontrols="clr-namespace:RPARobot.UserControls"
        mc:Ignorable="d"
        WindowStartupLocation="CenterOwner"
        Title="任务调度"
        MinWidth="400"
        MaxWidth="500"
        Width="480"
        Height="600"
        Background="#F7F7F9">

    <Window.Resources>
        <Style x:Key="ButtonBaseStyle" TargetType="Button">
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style x:Key="DefaultButton" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="Button">
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <Style x:Key="PrimaryButton" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="Button">
            <Setter Property="Background" Value="#FF1976D2"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="FieldName">
            <Setter Property="Margin" Value="0,8"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <GridLength x:Key="ColWidth">100</GridLength>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <cmd:EventToCommand Command="{Binding LoadedCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="24"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Text="添加计划任务"
                   FontWeight="Bold"
                   FontSize="16"
                   TextAlignment="Center"/>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource ColWidth}"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="创建方式："
                       Style="{StaticResource FieldName}"/>
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center"
                        Grid.Column="1">
                <RadioButton Content="快捷创建"
                         GroupName="CreatingMode"
                         IsChecked="{Binding CreatingMode,Converter={StaticResource CreatingModeToBoolConverter},ConverterParameter=0}"
                             Margin="0,0,16,0"/>
                <RadioButton GroupName="CreatingMode"
                         Content="自定义创建"
                         IsChecked="{Binding CreatingMode,Converter={StaticResource CreatingModeToBoolConverter},ConverterParameter=1}"/>
            </StackPanel>

            <TextBlock Text="任务名称："
                       Grid.Row="2"
                       Style="{StaticResource FieldName}"/>
            <TextBox Text="{Binding TaskName}"
                     Grid.Row="2"
                     Grid.Column="1"
                     VerticalContentAlignment="Center"
                     Padding="4,0"
                     Height="25"/>

            <TextBlock Text="选择流程：" 
                       Grid.Row="4"
                       Style="{StaticResource FieldName}"/>
            <ComboBox Grid.Column="1" 
                      Grid.Row="4"
                      ItemsSource="{Binding Flows}"
                      SelectedValuePath="Name"
                      DisplayMemberPath="Name"
                      SelectedValue="{Binding PackageName}"
                      VerticalContentAlignment="Center"
                      Height="25"/>


            <Grid Grid.Row="6"
                  Grid.ColumnSpan="2"
                  
                  Visibility="{Binding CreatingMode, Converter={StaticResource VisibilityIfQuickModeConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource ColWidth}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Style="{StaticResource FieldName}"
                           Text="选择周期："/>
                <ComboBox IsReadOnly="True"
                          Grid.Column="1"
                          ItemsSource="{Binding Cycles}"
                          SelectedValuePath="Key"
                          DisplayMemberPath="Name"
                          SelectedValue="{Binding Cycle}"
                          VerticalContentAlignment="Center"
                          Height="25"/>

                <ItemsControl ItemsSource="{Binding CheckBoxes}"
                              Grid.Row="1"
                              Grid.Column="1">
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <Border>
                                <ItemsPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Cycle, Converter={StaticResource CycleIsMonthlyOrWeeklyConverter}}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ItemsControl.Template>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:CheckBoxProps}">
                            <CheckBox Content="{Binding Text}" 
                                      IsChecked="{Binding IsChecked}"
                                      Margin="0,0,4,0"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <TextBlock Style="{StaticResource FieldName}"
                       Text="执行时间："
                       Grid.Row="2"/>

                <!---周期性的时间-->
                <xctk:TimeSpanUpDown Grid.Row="2"
                                 Grid.Column="1"
                                 VerticalContentAlignment="Center"
                                 Height="25"
                                 Width="180"
                                 AllowTextInput="False"
                                 HorizontalAlignment="Left"
                                 Value="00:00:00"
                                 Visibility="{Binding Cycle, Mode=OneWay, Converter={StaticResource VisibilityCycleIfNotOnlyOnceConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <cmd:EventToCommand Command="{Binding ExecutionTimeChangedCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:TimeSpanUpDown>

                <!---执行一次性任务的日期时间-->
                <xctk:DateTimePicker Grid.Row="2"
                                 Grid.Column="1"
                                 VerticalContentAlignment="Center"
                                 HorizontalAlignment="Left"
                                 Height="25"
                                 Width="180"
                                 Visibility="{Binding Cycle, Mode=OneWay, Converter={StaticResource VisibilityCycleIfOnlyOnceConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <cmd:EventToCommand Command="{Binding StartTimeChangedCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:DateTimePicker>

            </Grid>

            <Grid Grid.Row="6"
                  Grid.ColumnSpan="2"
                  
                  Visibility="{Binding CreatingMode, Converter={StaticResource VisibilityIfCustomModeConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource ColWidth}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource FieldName}"
                       Text="Cron表达式："
                       Grid.Row="6"/>

                <Grid Grid.Row="6"
                      Grid.Column="1">
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="TextBox">
                            <Setter Property="TextAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Height" Value="25"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="秒"/>
                    <TextBlock Text="分" Grid.Column="2"/>
                    <TextBlock Text="时" Grid.Column="4"/>
                    <TextBlock Text="日" Grid.Column="6"/>
                    <TextBlock Text="月" Grid.Column="8"/>
                    <TextBlock Text="周" Grid.Column="10"/>

                    <TextBox Grid.Row="1"
                             Text="{Binding CronSecond}"/>
                    <TextBox Grid.Row="1"
                             Grid.Column="2"
                             Text="{Binding CronMinute}"/>
                    <TextBox Grid.Row="1"
                             Grid.Column="4"
                             Text="{Binding CronHour}"/>
                    <TextBox Grid.Row="1"
                             Grid.Column="6"
                             Text="{Binding CronDayOfMonth}"/>
                    <TextBox Grid.Row="1"
                             Grid.Column="8"
                             Text="{Binding CronMonth}"/>
                    <TextBox Grid.Row="1" 
                             Grid.Column="10" 
                             Text="{Binding CronDayOfWeek}"/>
                </Grid>

            </Grid>



            <TextBlock Style="{StaticResource FieldName}"
                       Text="有效时间："
                       Grid.Row="8"
                       VerticalAlignment="Top"/>
            <Grid Grid.Row="8"
                  Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="8"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <RadioButton GroupName="EffectiveTime" 
                             Content="永久有效"
                             IsChecked="{Binding EffectiveTimeType, Converter={StaticResource EffectiveTimeToBoolConverter},ConverterParameter=0}"/>
                <RadioButton GroupName="EffectiveTime" 
                             Content="设置时间"
                             Grid.Row="2"
                             VerticalAlignment="Center"
                             Margin="0,0,8,0"
                             IsChecked="{Binding EffectiveTimeType, Converter={StaticResource EffectiveTimeToBoolConverter},ConverterParameter=1}"/>
                <xctk:DateTimePicker Grid.Row="3"
                                     Margin="0,4,0,0"
                                     Width="180"
                                     Height="25"
                                     HorizontalAlignment="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <cmd:EventToCommand Command="{Binding EffectiveTimeChangedCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:DateTimePicker>
            </Grid>

            <StackPanel Grid.Row="10"
                        
                        Grid.ColumnSpan="3"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button Command="{Binding SaveCommand}"
                        Style="{StaticResource PrimaryButton}">保存</Button>
                <Button Margin="16,0,0,0"
                        Command="{Binding CancelCommand}"
                        Style="{StaticResource DefaultButton}">取消</Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
